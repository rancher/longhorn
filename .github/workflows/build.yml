name: build
on:
  push:
    tags:
    - v*
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Tag to release, e.g. v1.7.2'
        required: true
        default: 'v1.7.2'

jobs:
  build_info:
    name: Build binaries
    runs-on: ubuntu-latest
    outputs:
      is_stable_version: ${{ steps.build_info.outputs.is_stable_version }}
      release_tag: ${{ steps.build_info.outputs.is_stable_version }}

    steps:
    - id: build_info
      name: Declare build info
      run: |
        if [ "${{ github.event_name }}" == 'workflow_dispatch' ]; then
          echo "Manually triggered with tag: ${{ github.event.inputs.release_tag }}"
          RELEASE_TAG=${{ github.event.inputs.release_tag }}
        else
          echo "Triggered by pushing tag: ${{ github.ref }}"
          RELEASE_TAG=${{ github.ref }}
        fi
        VERSION=$(sed -E 's/^v([0-9]*\.[0-9]*\.[0-9]*).*$/\1/' <<<$RELEASE_TAG )
        VERSION_MAJOR=$(cut -d. -f1 <<<$VERSION)
        VERSION_MINOR=$(cut -d. -f2 <<<$VERSION)
        VERSION_PATCH=$(cut -d. -f3 <<<$VERSION)
        
        if [[ -z "${VERSION_MAJOR}" || -z "${VERSION_MINOR}" || -z "${VERSION_PATCH}" ]]; then
          echo "cannot parse version numbers from build tag: '${RELEASE_TAG}'"
          exit 1
        fi
        
        [[ ${VERSION_PATCH} != 0 ]] && IS_STABLE_VERSION='true'

        echo "is_stable_version=${IS_STABLE_VERSION}" >>${GITHUB_OUTPUT}
        echo "release_tag=${RELEASE_TAG}" >>${GITHUB_OUTPUT}

        cat <<EOF
        VERSION_MAJOR=${VERSION_MAJOR}
        VERSION_MINOR=${VERSION_MINOR}
        VERSION_PATCH=${VERSION_PATCH}
        is_stable_version=${IS_STABLE_VERSION}
        release_tag=${RELEASE_TAG}
        EOF

  prime_release_gate:
    name: Prime release gate
    runs-on: ubuntu-latest
    needs: build_info
    if: needs.build_info.outputs.is_stable_version == 'true'
    outputs:
      release_tag: ${{ needs.build_info.outputs.release_tag }}
    steps:
    - run: echo 'Starting prime release build...'


  # =====================
  # backing-image-manager
  # =====================
  build_backing_image_manager:
    name: Build backing image manager
    needs: prime_release_gate
    uses: ./.github/workflows/build_push_image.yml
    with:
      release_tag: ${{ github.ref_name }}
      component_source: longhorn/backing-image-manager
      image_name: backing-image-manager
      image_tag: ${{ github.ref_name }}
      image_platforms: linux/amd64,linux/arm64


  # ===============
  # longhorn-engine
  # ===============
  build-push-longhorn-engine-amd64:
    name: Build Longhorn engine for AMD64
    runs-on: ubuntu-latest
    needs: prime_release_gate
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        repository: longhorn/longhorn-engine
        ref: ${{ github.ref_name }}

    # Build binaries
    - name: Run make build
      run: make build

    - uses: codecov/codecov-action@v4
      with:
        files: ./coverage.out
        flags: unittests
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Add executable permission
      run: |
        chmod +x ./bin/*

    - name: Read secrets
      uses: rancher-eio/read-vault-secrets@main
      with:
        secrets: |
          secret/data/github/repo/${{ github.repository }}/rancher-prime-registry/credentials registry | PRIME_REGISTRY ;
          secret/data/github/repo/${{ github.repository }}/rancher-prime-registry/credentials username | PRIME_REGISTRY_USERNAME ;
          secret/data/github/repo/${{ github.repository }}/rancher-prime-registry/credentials password | PRIME_REGISTRY_PASSWORD

    - name: build and push image
      uses: rancher/ecm-distro-tools/actions/publish-image@master
      with:
        image: longhorn-engine
        tag: ${{ github.ref_name }}-amd64
        platforms: linux/amd64
        prime-registry: ${{ env.PRIME_REGISTRY }}
        prime-repo: longhorn
        prime-username: ${{ env.PRIME_REGISTRY_USERNAME }}
        prime-password: ${{ env.PRIME_REGISTRY_PASSWORD }}
        make-target: workflow-image-build-push-secure
        push-to-prime: true
        push-to-public: false

  build-push-longhorn-engine-arm64:
    name: Build Longhorn engine for ARM64
    runs-on: longhorn-infra-oracle-arm64-runners
    needs: prime_release_gate
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Install make curl git
      run: |
        sudo apt update
        sudo apt-get -y install make curl git

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        repository: longhorn/longhorn-engine
        ref: ${{ github.ref_name }}

    # Build binaries
    - name: Run make build
      run: make build

    - name: Add executable permission
      run: |
        chmod +x ./bin/*

    - name: Read secrets
      uses: rancher-eio/read-vault-secrets@main
      with:
        secrets: |
          secret/data/github/repo/${{ github.repository }}/rancher-prime-registry/credentials registry | PRIME_REGISTRY ;
          secret/data/github/repo/${{ github.repository }}/rancher-prime-registry/credentials username | PRIME_REGISTRY_USERNAME ;
          secret/data/github/repo/${{ github.repository }}/rancher-prime-registry/credentials password | PRIME_REGISTRY_PASSWORD

    - name: build and push image
      uses: rancher/ecm-distro-tools/actions/publish-image@master
      with:
        image: longhorn-engine
        tag: ${{ github.ref_name }}-arm64
        platforms: linux/arm64
        prime-registry: ${{ env.PRIME_REGISTRY }}
        prime-repo: longhorn
        prime-username: ${{ env.PRIME_REGISTRY_USERNAME }}
        prime-password: ${{ env.PRIME_REGISTRY_PASSWORD }}
        make-target: workflow-image-build-push-secure
        push-to-prime: true
        push-to-public: false

  manifest-longhorn-engine-image:
    name: Manifest Longhorn engine images
    runs-on: ubuntu-latest
    #needs: [build-push-longhorn-engine-amd64, build-push-longhorn-engine-arm64]
    needs: build-push-longhorn-engine-amd64
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        repository: longhorn/longhorn-engine
        ref: ${{ github.ref_name }}

    - name: Read secrets
      uses: rancher-eio/read-vault-secrets@main
      with:
        secrets: |
          secret/data/github/repo/${{ github.repository }}/rancher-prime-registry/credentials registry | PRIME_REGISTRY ;
          secret/data/github/repo/${{ github.repository }}/rancher-prime-registry/credentials username | PRIME_REGISTRY_USERNAME ;
          secret/data/github/repo/${{ github.repository }}/rancher-prime-registry/credentials password | PRIME_REGISTRY_PASSWORD

    - name: build and push image
      uses: rancher/ecm-distro-tools/actions/publish-image@master
      with:
        image: longhorn-engine
        tag: ${{ github.ref_name }}
        platforms: linux/amd64,linux/arm64
        prime-registry: ${{ env.PRIME_REGISTRY }}
        prime-repo: longhorn
        prime-username: ${{ env.PRIME_REGISTRY_USERNAME }}
        prime-password: ${{ env.PRIME_REGISTRY_PASSWORD }}
        make-target: workflow-manifest-image
        push-to-prime: true
        push-to-public: false


  # =========================
  # longhorn-instance-manager
  # =========================
  build-push-longhorn-instance-manager-amd64:
    name: Build Longhorn instance manager for AMD64
    runs-on: ubuntu-latest
    needs: prime_release_gate
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        repository: longhorn/longhorn-instance-manager
        ref: ${{ github.ref_name }}

    # Build binaries
    - name: Run make build
      run: make build

    - uses: codecov/codecov-action@v4
      with:
        files: ./coverage.out
        flags: unittests
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Add executable permission
      run: |
        chmod +x ./bin/*

    - name: Read secrets
      uses: rancher-eio/read-vault-secrets@main
      with:
        secrets: |
          secret/data/github/repo/${{ github.repository }}/rancher-prime-registry/credentials registry | PRIME_REGISTRY ;
          secret/data/github/repo/${{ github.repository }}/rancher-prime-registry/credentials username | PRIME_REGISTRY_USERNAME ;
          secret/data/github/repo/${{ github.repository }}/rancher-prime-registry/credentials password | PRIME_REGISTRY_PASSWORD

    - name: build and push image
      uses: rancher/ecm-distro-tools/actions/publish-image@master
      with:
        image: longhorn-instance-manager
        tag: ${{ github.ref_name }}-amd64
        platforms: linux/amd64
        prime-registry: ${{ env.PRIME_REGISTRY }}
        prime-repo: longhorn
        prime-username: ${{ env.PRIME_REGISTRY_USERNAME }}
        prime-password: ${{ env.PRIME_REGISTRY_PASSWORD }}
        make-target: workflow-image-build-push-secure
        push-to-prime: true
        push-to-public: false

  build-push-longhorn-instance-manager-arm64:
    name: Build Longhorn instance-manager for ARM64
    runs-on: longhorn-infra-oracle-arm64-runners
    needs: prime_release_gate
    steps:
    - name: Install make curl git
      run: |
        sudo apt update
        sudo apt-get -y install make curl git

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        repository: longhorn/longhorn-instance-manager
        ref: ${{ github.ref_name }}

    # Build binaries
    - name: Run make build
      run: make build

    - name: Add executable permission
      run: |
        chmod +x ./bin/*

    - name: Read secrets
      uses: rancher-eio/read-vault-secrets@main
      with:
        secrets: |
          secret/data/github/repo/${{ github.repository }}/rancher-prime-registry/credentials registry | PRIME_REGISTRY ;
          secret/data/github/repo/${{ github.repository }}/rancher-prime-registry/credentials username | PRIME_REGISTRY_USERNAME ;
          secret/data/github/repo/${{ github.repository }}/rancher-prime-registry/credentials password | PRIME_REGISTRY_PASSWORD

    - name: build and push image
      uses: rancher/ecm-distro-tools/actions/publish-image@master
      with:
        image: longhorn-instance-manager
        tag: ${{ github.ref_name }}-arm64
        platforms: linux/arm64
        prime-registry: ${{ env.PRIME_REGISTRY }}
        prime-repo: longhorn
        prime-username: ${{ env.PRIME_REGISTRY_USERNAME }}
        prime-password: ${{ env.PRIME_REGISTRY_PASSWORD }}
        make-target: workflow-image-build-push-secure
        push-to-prime: true
        push-to-public: false

  manifest-longhorn-instance-manager-image:
    name: Manifest Longhorn instance manager images
    runs-on: ubuntu-latest
    needs: [build-push-longhorn-instance-manager-amd64, build-push-longhorn-instance-manager-arm64]
    steps:
    - name: Checkout release code
      uses: actions/checkout@v4
      with:
        repository: longhorn/longhorn-instance-manager
        ref: ${{ github.ref_name }}

    - name: Read secrets
      uses: rancher-eio/read-vault-secrets@main
      with:
        secrets: |
          secret/data/github/repo/${{ github.repository }}/rancher-prime-registry/credentials registry | PRIME_REGISTRY ;
          secret/data/github/repo/${{ github.repository }}/rancher-prime-registry/credentials username | PRIME_REGISTRY_USERNAME ;
          secret/data/github/repo/${{ github.repository }}/rancher-prime-registry/credentials password | PRIME_REGISTRY_PASSWORD

    - name: build and push image
      uses: rancher/ecm-distro-tools/actions/publish-image@master
      with:
        image: longhorn-instance-manager
        tag: ${{ github.ref_name }}
        platforms: linux/amd64,linux/arm64
        prime-registry: ${{ env.PRIME_REGISTRY }}
        prime-repo: longhorn
        prime-username: ${{ env.PRIME_REGISTRY_USERNAME }}
        prime-password: ${{ env.PRIME_REGISTRY_PASSWORD }}
        make-target: workflow-manifest-image
        push-to-prime: true
        push-to-public: false


  # ================
  # longhorn-manager
  # ================
  build_longhorn_manager:
    name: Build Longhorn manager
    needs: prime_release_gate
    uses: ./.github/workflows/build_push_image.yml
    with:
      release_tag: ${{ github.ref_name }}
      component_source: longhorn/longhorn-manager
      image_name: longhorn-manager
      image_tag: ${{ github.ref_name }}
      image_platforms: linux/amd64,linux/arm64


  # ======================
  # longhorn-share-manager
  # ======================
  build_longhorn_share_manager:
    name: Build Longhorn share manager
    needs: prime_release_gate
    uses: ./.github/workflows/build_push_image.yml
    with:
      release_tag: ${{ github.ref_name }}
      component_source: longhorn/longhorn-share-manager
      image_name: longhorn-share-manager
      image_tag: ${{ github.ref_name }}
      image_platforms: linux/amd64,linux/arm64


  # ===========
  # longhorn-ui
  # ===========
  build_longhorn_ui:
    name: Build Longhorn UI
    needs: prime_release_gate
    uses: ./.github/workflows/build_push_image.yml
    with:
      release_tag: ${{ github.ref_name }}
      component_source: longhorn/longhorn-ui
      image_name: longhorn-ui-manager
      image_tag: ${{ github.ref_name }}
      image_platforms: linux/amd64,linux/arm64


  # ============
  # longhorn-cli
  # ============
  build_longhorn_cli:
    name: Build Longhorn CLI
    needs: prime_release_gate
    uses: ./.github/workflows/build_push_image.yml
    with:
      release_tag: ${{ github.ref_name }}
      component_source: longhorn/cli
      image_name: longhorn-cli
      image_tag: ${{ github.ref_name }}
      image_platforms: linux/amd64,linux/arm64
